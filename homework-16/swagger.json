{
  "openapi": "3.0.0",
  "info": {
    "title": "Book Store API",
    "description": "This is a Book Store API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Users authorization API"
    },
    {
      "name": "User",
      "description": "Users of Book Store management API"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authorize user",
        "description": "Get access and refresh tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "Use only strong passwords",
                    "example": "cB{9Ih?(9K5j"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokens"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "User is missing or password is not valid"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Revoke user authorization",
        "description": "Revoke access and refresh for user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh token",
        "description": "Get access and refresh tokens",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTcwNzU4MTgwMywiZXhwIjoxNzIzMTMzODAzfQ.NbeKVAKsBzzWJGTliyhrRz-wPAatkBSM4pNuQy-mX7Y"
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokens"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a new user",
        "description": "Add a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewUser"
                  },
                  {
                    "$ref": "#/components/schemas/User.password"
                  },
                  {
                    "type": "object",
                    "required": [
                      "firstName",
                      "lastName",
                      "email",
                      "password"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "id of the user",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find users by id",
        "description": "Return single user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "User is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update User by id",
        "description": "Updates an User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/NewUser"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete author by id",
        "description": "Deletes an author",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User is not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "NewUser": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John",
            "minLength": 2,
            "maxLength": 80
          },
          "lastName": {
            "type": "string",
            "example": "Doe",
            "minLength": 2,
            "maxLength": 80
          },
          "email": {
            "type": "string",
            "example": "doe@example.com"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "example": "708b8f84-bd94-447d-91ff-3c8339a15345"
              }
            }
          },
          {
            "$ref": "#/components/schemas/NewUser"
          }
        ]
      },
      "User.password": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Use only strong passwords",
            "example": "cB{9Ih?(9K5j"
          }
        }
      },
      "tokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTcwNzU4MTgwMywiZXhwIjoxNzA3NTg1NDAzfQ.28IoFQn_nLQ3kYSdPJXBqow6X1SA0qU0gRIIIkueb1w"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTcwNzU4MTgwMywiZXhwIjoxNzIzMTMzODAzfQ.NbeKVAKsBzzWJGTliyhrRz-wPAatkBSM4pNuQy-mX7Y"
          }
        }
      }
    }
  }
}
